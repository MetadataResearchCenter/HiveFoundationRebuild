!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BROADERS	database/concepts.sql	/^CREATE TABLE BROADERS$/;"	t
BROADERS.BroaderThanURI	database/concepts.sql	/^     BroaderThanURI    VARCHAR(100)   NOT NULL,$/;"	F
BROADERS.ConceptURI	database/concepts.sql	/^    (ConceptURI        VARCHAR(100)   NOT NULL,$/;"	F
CONCEPT	database/concepts.sql	/^CREATE TABLE CONCEPT$/;"	t
CONCEPT.AltLabel	database/concepts.sql	/^     AltLabel       VARCHAR(100),$/;"	F
CONCEPT.ConceptURI	database/concepts.sql	/^    (ConceptURI    VARCHAR(100)   NOT NULL,$/;"	F
CONCEPT.PrefLabel	database/concepts.sql	/^     PrefLabel      VARCHAR(100)   NOT NULL,$/;"	F
CONCEPT.ScopeNotes	database/concepts.sql	/^     ScopeNotes    VARCHAR(500),$/;"	F
CONCEPT.TopConcept	database/concepts.sql	/^     TopConcept    INTEGER DEFAULT '0',$/;"	F
Counter	whoosh_example.py	/^from collections import Counter$/;"	i
ID	whoosh_example.py	/^from whoosh.fields import ID, TEXT$/;"	i
QueryParser	whoosh_example.py	/^from whoosh.qparser import QueryParser$/;"	i
RELATED	database/concepts.sql	/^CREATE TABLE RELATED$/;"	t
RELATED.ConceptURI	database/concepts.sql	/^    (ConceptURI     VARCHAR(100)   NOT NULL,$/;"	F
RELATED.RelatedURI	database/concepts.sql	/^     RelatedURI     VARCHAR(100)   NOT NULL,$/;"	F
RegexTokenizer	whoosh_example.py	/^from whoosh.analysis import RegexTokenizer$/;"	i
Schema	whoosh_example.py	/^from whoosh.fields import Schema$/;"	i
StopFilter	whoosh_example.py	/^from whoosh.analysis import StopFilter$/;"	i
TEXT	whoosh_example.py	/^from whoosh.fields import ID, TEXT$/;"	i
UATSearcher	whoosh_example.py	/^UATSearcher = index.searcher()$/;"	v
UAT_words	whoosh_example.py	/^UAT_words = findConceptsLike()$/;"	v
author	whoosh_example.py	/^                   author = TEXT(stored=True),$/;"	v
create_in	whoosh_example.py	/^from whoosh.index import open_dir, create_in$/;"	i
db	database/sampleLookupQuery.py	/^db = None$/;"	v
db	whoosh_example.py	/^db = None$/;"	v
dbConnect	whoosh_example.py	/^def dbConnect():$/;"	f
db_connect	database/sampleLookupQuery.py	/^def db_connect():$/;"	f
findConceptsLike	database/sampleLookupQuery.py	/^def findConceptsLike(term):$/;"	f
findConceptsLike	whoosh_example.py	/^def findConceptsLike():$/;"	f
index	whoosh_example.py	/^index = open_dir("index")$/;"	v
io	whoosh_example.py	/^import io$/;"	i
ix	whoosh_example.py	/^ix = create_in("index", my_schema)$/;"	v
main	database/sampleLookupQuery.py	/^def main():$/;"	f
my_schema	whoosh_example.py	/^my_schema = Schema(id = ID(unique=True, stored=True),$/;"	v
open_dir	whoosh_example.py	/^from whoosh.index import open_dir, create_in$/;"	i
os	database/sampleLookupQuery.py	/^import os$/;"	i
os	whoosh_example.py	/^import os$/;"	i
path	whoosh_example.py	/^                    path = u'HiveFoundationRebuild\/concepts.sqlite',$/;"	v
path	whoosh_example.py	/^                   path = ID(stored=True),$/;"	v
qp	whoosh_example.py	/^qp = QueryParser("text", schema=index.schema)$/;"	v
query	whoosh_example.py	/^    query = qp.parse(token)$/;"	v
searchReuslt	whoosh_example.py	/^    searchReuslt = UATSearcher.search(query)$/;"	v
source	whoosh_example.py	/^                    source = u'concepts.sqlite',$/;"	v
source	whoosh_example.py	/^                   source = ID(stored=True),$/;"	v
sqlite3	database/sampleLookupQuery.py	/^import sqlite3$/;"	i
sqlite3	whoosh_example.py	/^import sqlite3$/;"	i
stopWordsFile1	whoosh_example.py	/^stopWordsFile1 = open("stopwords (1).txt", "r")$/;"	v
stopWordsFile2	whoosh_example.py	/^stopWordsFile2 = open("stopwords_en.txt", "r")$/;"	v
stopper	whoosh_example.py	/^stopper = StopFilter(stoplist = stopwords)$/;"	v
stopwords	whoosh_example.py	/^stopwords = stopwords1 + stopwords2$/;"	v
stopwords1	whoosh_example.py	/^stopwords1 = stopWordsFile1.read().splitlines()$/;"	v
stopwords2	whoosh_example.py	/^stopwords2 = stopWordsFile2.read().splitlines()$/;"	v
text	whoosh_example.py	/^                    text = io.open('uat_voc.txt', encoding='utf-8').read())$/;"	v
text	whoosh_example.py	/^                   text = TEXT)$/;"	v
title	whoosh_example.py	/^                    title = u'uat_voc',$/;"	v
title	whoosh_example.py	/^                   title = TEXT(stored=True),$/;"	v
tokenList	whoosh_example.py	/^        tokenList = filter(lambda a: a != token, tokenList)$/;"	v
tokenList	whoosh_example.py	/^tokenList = []$/;"	v
tokenizer	whoosh_example.py	/^tokenizer = RegexTokenizer()$/;"	v
writer	whoosh_example.py	/^writer = index.writer()$/;"	v
